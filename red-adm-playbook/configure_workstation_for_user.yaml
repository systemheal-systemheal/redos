- hosts: all
  gather_facts: no
  become: true
  tasks:
    - name: disable kernel updates
      ansible.builtin.lineinfile:
        path: /etc/dnf/dnf.conf
        line: exclude=kernel*

    - name: dnf update and upgrade the system
      ansible.builtin.dnf:
        name: "*"
        state: latest

    - name: install soft
      ansible.builtin.dnf:
        name:
          - perl-Getopt-Long
          - perl-File-Copy
          - python3-chardet
          - smbpass
          - evolution
          - evolution-ews
          - htop
          - projectlibre
          - gimp
        state: latest

    - name: remove ntp
      ansible.builtin.dnf:
        name: ntp
        state: absent
        autoremove : yes

    - name: disabling systemd-timesyncd
      systemd:
        name: systemd-timesyncd
        state: stopped
        enabled: false

    - name: set timezone to Asia/Krasnoyarsk
      community.general.timezone:
        name: Asia/Krasnoyarsk

    - name: echo ntp to /etc/systemd/timesyncd.conf
      ansible.builtin.lineinfile:
        path: /etc/systemd/timesyncd.conf
        line: NTP=10.37.11.71

    - name: enabling systemd-timesyncd
      systemd:
        name: systemd-timesyncd
        state: started
        enabled: true

    - name: Turning "set-ntp" on
      command: /usr/bin/timedatectl set-ntp on

    - name: enable autostart and restart ntp service
      ansible.builtin.shell: systemctl enable systemd-timesyncd.service && systemctl restart systemd-timesyncd.service
      args:
        executable: /bin/bash

    - name: install "ifcplugin-chromium.x86_64" for gosuslugi
      ansible.builtin.dnf:
        name: ifcplugin-chromium.x86_64
        state: present

    - name: install "librecad-2.1.3-53.16.el7.x86_64"
      ansible.builtin.dnf:
        name: librecad-2.1.3-53.16.el7.x86_64
        state: present

    - name: install "librecad-langs-2.2.0-0.11.rc2.el7.noarch"
      ansible.builtin.dnf:
        name: librecad-langs-2.2.0-0.11.rc2.el7.noarch
        state: present

    - name: copying folder soft to remote host
      ansible.builtin.copy:
        src: /share/soft/
        dest: /opt/soft

    - name: install kontur plugin
      ansible.builtin.shell: dnf install -y /opt/soft/kontur/kontur.plugin.002061.rpm
      args:
        executable: /bin/bash

    - name: install 1c client 8.3.25.1394
      ansible.builtin.shell: dnf install -y /opt/soft/1c/1c-enterprise-8.3.25.1394-thin-client-8.3.25-1394.x86_64.rpm
      args:
        executable: /bin/bash

    - name: shell command for 1c client 8.3.25.1394
      ansible.builtin.shell: mv /opt/1cv8/common/libstdc++.so.6 /opt/1cv8/common/libstdc++.so.6.old && ln -s /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /opt/1cv8/common/libstdc++.so.6 && mv /opt/1cv8/x86_64/8.3.25.1394/libstdc++.so.6 /opt/1cv8/x86_64/8.3.25.1394/libstdc++.so.6.old && ln -s /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /opt/1cv8/x86_64/8.3.25.1394/libstdc++.so.6
      args:
        executable: /bin/bash

    - name: install r7 office
      ansible.builtin.shell: dnf install -y /opt/soft/r7_office/r7-office-2024.3.2-551.el8.x86_64.rpm
      args:
        executable: /bin/bash

    - name: install epel-release
      ansible.builtin.shell: dnf install -y /opt/soft/epel-release/epel-release-latest-7.noarch.rpm
      args:
        executable: /bin/bash

    - name: install kyocera drivers
      ansible.builtin.shell: dnf install -y /opt/soft/kyocera_drivers/kyodialog-9.3-0.x86_64.rpm
      args:
        executable: /bin/bash

    - name: install katusha m348 drivers
      ansible.builtin.shell: dnf install -y /opt/soft/katusha_drivers/katusha-m348-ps-1.3.2.x86_64.rpm
      args:
        executable: /bin/bash

    - name: install pdf master
      ansible.builtin.shell: dnf install -y /opt/soft/pdf/master-pdf-editor-5.9.84-qt5.x86_64.rpm
      args:
        executable: /bin/bash

    - name: disable automatic mapping of printers
      ansible.builtin.shell: systemctl disable avahi-daemon && systemctl stop avahi-daemon
      args:
        executable: /bin/bash

    - name: Copy libjcPKCS11-2.so file to /usr/lib64/
      ansible.builtin.copy:
        src: /opt/soft/IUS/libjcPKCS11-2.so
        dest: /usr/lib64/
        remote_src: true
        owner: root
        group: root
        mode: '777'

    - name: create password file for x11vnc
      ansible.builtin.shell: x11vnc -storepasswd "Cbnlbrjdffqif50" /etc/vncpasswd
      args:
        executable: /bin/bash

    - name: x11 daemon-reload-enable-start
      ansible.builtin.shell: systemctl daemon-reload && systemctl enable x11vnc.service && systemctl start x11vnc.service
      args:
        executable: /bin/bash

    - name: filling desktop file for reconnect share
      template:
        src=/share/templates/reconnect-share.desktop
        dest=/usr/share/applications/

    - name: copy reconnect-share icon file
      ansible.builtin.copy:
        src: /share/scripts/reconnect-share/reconnect-share.png
        dest: /usr/bin/
        owner: root
        group: root
        mode: u+rx,g+rx,o+rx

    - name: copy reconnect-share shell file
      ansible.builtin.copy:
        src: /share/scripts/reconnect-share/reconnect-share.sh
        dest: /usr/bin/
        owner: root
        group: root
        mode: u+rx,g+rx,o+rx

    - name: creating a desktop file intranet-portal-gazprom.desktop
      template:
        src=/share/templates/intranet-portal-gazprom.desktop
        dest=/usr/share/applications/

    - name: creating a desktop file phonebook-gdk.desktop
      template:
        src=/share/templates/phonebook-gdk.desktop
        dest=/usr/share/applications/

    - name: creating a desktop file phonebook-pao-gazprom.desktop
      template:
        src=/share/templates/phonebook-pao-gazprom.desktop
        dest=/usr/share/applications/

    - name: creating a desktop file portal-gdk.desktop
      template:
        src=/share/templates/portal-gdk.desktop
        dest=/usr/share/applications/

    - name: creating a desktop file consultant.desktop
      template:
        src=/share/templates/consultant.desktop
        dest=/usr/share/applications/

    - name: installing python libraries (required for the red admin agent to work)
      ansible.builtin.dnf:
        name:
          - python2-daemon
          - python3-psutil

  vars:
    user:
